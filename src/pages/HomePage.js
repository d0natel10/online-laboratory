import React, { useRef, useEffect, useState } from 'react';
import LabCard from '../components/LabCard';
import '../styles/home.css';
import lab1Path from '../images/lab1.jpg';
import lab2Path from '../images/lab2.jpg';
import lab3Path from '../images/lab3.jpg';
import lab4Path from '../images/lab4.jpg';
import lab5Path from '../images/lab5.jpg';
import lab6Path from '../images/lab6.jpg';
import { useNavigate } from 'react-router-dom';

const labs = [
    {id: 1, title: "–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ", description: "–ò–∑—É—á–µ–Ω–∏–µ –∑–∞–∫–æ–Ω–æ–≤ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–≥–æ –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è", image: lab1Path},
    {id: 2, title: "–†–∞–≤–Ω–æ—É—Å–∫–æ—Ä–µ–Ω–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ", description: "–ê–Ω–∞–ª–∏–∑ —Ä–∞–≤–Ω–æ—É—Å–∫–æ—Ä–µ–Ω–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è —Ç–µ–ª", image: lab2Path},
    {id: 3, title: "–°–≤–æ–±–æ–¥–Ω–æ–µ –ø–∞–¥–µ–Ω–∏–µ", description: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–∞–¥–µ–Ω–∏—è —Ç–µ–ª", image: lab3Path},
    {id: 4, title: "–î–≤–∏–∂–µ–Ω–∏–µ –±—Ä–æ—à–µ–Ω–Ω–æ–≥–æ —Ç–µ–ª–∞", description: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è —Ç–µ–ª–∞, –±—Ä–æ—à–µ–Ω–Ω–æ–≥–æ –ø–æ–¥ —É–≥–ª–æ–º –∫ –≥–æ—Ä–∏–∑–æ–Ω—Ç—É", image: lab4Path},
    {id: 5, title: "–î–≤–∏–∂–µ–Ω–∏–µ –ø–æ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏", description: "–ê–Ω–∞–ª–∏–∑ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏", image: lab5Path},
    {id: 6, title: "–î–≤–∏–∂–µ–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–µ–ª", description: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–µ–ª", image: lab6Path},
];

const HomePage = ({user}) => {
    const labsContainerRef = useRef(null);
    const isDragging = useRef(false);
    const startX = useRef(0);
    const scrollLeft = useRef(0);
    const animationRef = useRef(null);
    const [isAutoScrolling, setIsAutoScrolling] = useState(true);
    const scrollSpeed = 1;

    const navigate = useNavigate();

    const handleOnStart = () => {
        navigate('/auth');
    }

    // –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª –∫ –ø–æ–∑–∏—Ü–∏–∏
    const smoothScrollTo = (position, duration = 1000) => {
        const start = labsContainerRef.current.scrollLeft;
        const change = position - start;
        const startTime = performance.now();
        
        const animateScroll = (currentTime) => {
            const elapsed = currentTime - startTime;
            const progress = Math.min(elapsed / duration, 1);
            const ease = easeInOutQuad(progress);
            labsContainerRef.current.scrollLeft = start + change * ease;
            
            if (progress < 1) {
                animationRef.current = requestAnimationFrame(animateScroll);
            } else {
                setIsAutoScrolling(true);
                animationRef.current = requestAnimationFrame(autoScroll);
            }
        };
        
        cancelAnimationFrame(animationRef.current);
        animationRef.current = requestAnimationFrame(animateScroll);
    };

    // –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
    const easeInOutQuad = (t) => {
        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
    };

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
    const autoScroll = () => {
        if (!isAutoScrolling || !labsContainerRef.current) return;
        
        const container = labsContainerRef.current;
        const maxScroll = container.scrollWidth - container.clientWidth;
        
        if (container.scrollLeft >= maxScroll - 5) {
            setIsAutoScrolling(false);
            smoothScrollTo(0);
        } else {
            container.scrollLeft += scrollSpeed;
            animationRef.current = requestAnimationFrame(autoScroll);
        }
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
    const handleMouseDown = (e) => {
        isDragging.current = true;
        startX.current = e.pageX - labsContainerRef.current.offsetLeft;
        scrollLeft.current = labsContainerRef.current.scrollLeft;
        setIsAutoScrolling(false);
        cancelAnimationFrame(animationRef.current);
    };

    const handleMouseUp = () => {
        if (!isDragging.current) return;
        isDragging.current = false;
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–∫—Ä—É—Ç–∫—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è
        setTimeout(() => {
            setIsAutoScrolling(true);
            animationRef.current = requestAnimationFrame(autoScroll);
        }, 2000);
    };

    const handleMouseMove = (e) => {
        if (!isDragging.current) return;
        e.preventDefault();
        const x = e.pageX - labsContainerRef.current.offsetLeft;
        const walk = (x - startX.current) * 2;
        labsContainerRef.current.scrollLeft = scrollLeft.current - walk;
    };

    useEffect(() => {
        animationRef.current = requestAnimationFrame(autoScroll);
        
        return () => {
            cancelAnimationFrame(animationRef.current);
        };
    }, []);

    return (
        <div className="home-container">
            {/* Hero Section with Parallax */}
            <section className="hero">
                <div className="hero-content">
                    <h1>–í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –ø–æ –∫–∏–Ω–µ–º–∞—Ç–∏–∫–µ</h1>
                    <p>–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –∑–∞–∫–æ–Ω—ã –¥–≤–∏–∂–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥–µ</p>
                </div>
            </section>

            {/* About Section */}
            <section className="about-section-home">
                <div className="container">
                    <h2>–û –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏</h2>
                    <p>
                        –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑—É—á–∞—Ç—å –æ—Å–Ω–æ–≤—ã –∫–∏–Ω–µ–º–∞—Ç–∏–∫–∏ 
                        —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –∏ —Å–∏–º—É–ª—è—Ü–∏–∏. –í—ã —Å–º–æ–∂–µ—Ç–µ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, 
                        –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä—É–¥–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –≤ –æ–±—ã—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.
                    </p>
                    <div className="features-grid">
                        <div className="feature-card">
                            <div className="feature-icon">üìä</div>
                            <h3>–†–µ–∞–ª—å–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏</h3>
                            <p>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–≤–∏–∂–µ–Ω–∏—è</p>
                        </div>
                        <div className="feature-card">
                            <div className="feature-icon">‚öôÔ∏è</div>
                            <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤</h3>
                            <p>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤</p>
                        </div>
                        <div className="feature-card">
                            <div className="feature-icon">üì±</div>
                            <h3>–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</h3>
                            <p>–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ª—é–±—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ü–û</p>
                        </div>
                    </div>
                </div>
            </section>

            {/* Labs Catalog with Parallax Background */}
           <section className="parallax-bg">
                <div className="container">
                    <div className="lab-catalog">
                        <h2 id="catalog">–ö–∞—Ç–∞–ª–æ–≥ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç</h2>
                        <p className="catalog-description">
                            –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é —Ä–∞–±–æ—Ç—É –∏–∑ –Ω–∞—à–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞
                        </p>
                        <div 
                            className="labs-scroll-container"
                            ref={labsContainerRef}
                            onMouseDown={handleMouseDown}
                            onMouseUp={handleMouseUp}
                            onMouseLeave={handleMouseUp}
                            onMouseMove={handleMouseMove}
                        >
                            <div className="labs-grid">
                                {labs.map(lab => (
                                    <LabCard
                                        key={lab.id}
                                        id={lab.id}
                                        title={lab.title}
                                        description={lab.description}
                                        image={lab.image}
                                    />
                                ))}

                            </div>
                        </div>
                    </div>
                </div>
            </section>

            {/* Contact Section */}
            {!user ? <section className="contact-section-home">
                <div className="container">
                    <h2>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?</h2>
                    <p>
                        –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø 
                        –∫–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.
                    </p>
                    <button className="cta-button-home" onClick={handleOnStart}>–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</button>
                </div>
            </section>
           :
           <div></div> 
        }
        </div>
    );
}

export default HomePage;